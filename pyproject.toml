[tool.pyright]
executionEnvironments = [{ root = "src" }]
reportUndefinedVariable = false
reportUnusedImport = false
reportUnusedVariable = false

[tool.pylint.messages_control]
disable = [
  "C0114",               # missing-module-docstring (annoying)
  "C0115",               # missing-class-docstring (annoying)
  "C0116",               # missing-function-docstring (annoying)
  "W1203",               # logging-fstring-interpolation (not enough performance gain)
  "W1201",               # logging-not-lazy (not enough performance gain)
  "E1101",               # no-member (handled by other linters = HBOL)
  "W1514",               # unsupported-builtin-appeal (HBOL)
  "W0718",               # broad-except (might need to re-enable this)
  "C0301",               # line-too-long (HBOL)
  "undefined-variable",  # (HBOL)
  "import-error",        # (HBOL)
  "unused-import",       # (HBOL)
  "trailing-whitespace", # (HBOL)
  "trailing-newlines",   # (tends to trigger in empty __init__.py files)
  "no-name-in-module",   # (HBOL)

]

enable = [
  "no-self-use", # enable this to enforce no self use
]

[tool.pylint.master]
extension-pkg-allow-list = ["cv2", "win32gui"]
load-plugins = ["pylint.extensions.no_self_use"]

[tool.mypy]
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
show_error_codes = true
ignore_missing_imports = true
disable_error_code = "name-defined"

[tool.ruff]
line-length = 88
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = [
  "F401", # unused imports, would rather disable this in pyright but seems impossible
]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py312"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
# Use parentheses for imports that span multiple lines
force-wrap-aliases = true

# Prefer vertical hanging indent style, like Black
combine-as-imports = true
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
